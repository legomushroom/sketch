// Generated by CoffeeScript 1.6.2
(function() {
  var COLOURS, MAX_PARTICLES, Particle2, avoid, demo, particles, physics, pool,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Particle2 = (function(_super) {
    __extends(Particle2, _super);

    function Particle2(x, y, radius) {
      this.init(x, y, radius);
    }

    Particle2.prototype.init = function(x, y, radius) {
      this.alive = true;
      this.radius = radius || 10;
      this.wander = 0.15;
      this.theta = random(TWO_PI);
      this.drag = 0.92;
      this.color = "#222";
      this.x = x || 0.0;
      this.y = y || 0.0;
      this.vx = 0.0;
      return this.vy = 0.0;
    };

    Particle2.prototype.move = function() {
      this.x += this.vx;
      this.y += this.vy;
      this.vx *= this.drag;
      this.vy *= this.drag;
      this.theta += random(-0.5, 0.5) * this.wander;
      this.vx += sin(this.theta) * 0.1;
      this.vy += cos(this.theta) * 0.1;
      this.radius *= 0.96;
      return this.alive = this.radius > 0.5;
    };

    Particle2.prototype.draw = function(ctx) {
      ctx.beginPath();
      ctx.arc(this.x, this.y, this.radius, 0, TWO_PI);
      ctx.fillStyle = this.color;
      return ctx.fill();
    };

    return Particle2;

  })(Particle);

  physics = new Physics;

  physics.integrator = new Verlet;

  avoid = new Attraction;

  MAX_PARTICLES = 1000;

  COLOURS = ["#69D2E7", "#A7DBD8", "#E0E4CC", "#F38630", "#FA6900", "#FF4E50", "#F9D423"];

  particles = [];

  pool = [];

  demo = Sketch.create({
    container: document.getElementById("container")
  });

  demo.setup = function() {};

  demo.spawn = function(x, y) {
    var force, particle, theta;

    if (particles.length >= MAX_PARTICLES) {
      pool.push(particles.shift());
    }
    particle = (pool.length ? pool.pop() : new Particle2());
    particle.init(x, y, random(10, 80));
    particle.wander = random(0.5, 2.0);
    particle.color = random(COLOURS);
    particle.drag = random(.9, .99);
    theta = random(TWO_PI);
    force = random(2, 8);
    particle.vx = sin(theta) * force;
    particle.vy = cos(theta) * force;
    return particles.push(particle);
  };

  demo.update = function() {
    var i, particle, _results;

    i = particles.length - 1;
    _results = [];
    while (i >= 0) {
      particle = particles[i];
      if (particle.alive) {
        particle.move();
      } else {
        pool.push(particles.splice(i, 1)[0]);
      }
      _results.push(i--);
    }
    return _results;
  };

  demo.draw = function() {
    var i;

    demo.globalCompositeOperation = "lighter";
    i = particles.length - 1;
    while (i >= 0) {
      particles[i].draw(demo);
      i--;
    }
    demo.beginPath();
    demo.arc(demo.width / 2, demo.height / 2, 100, 0, TWO_PI);
    demo.fillStyle = "white";
    return demo.fill();
  };

  demo.mousemove = function() {
    var i, j, max, n, touch, _results;

    i = 0;
    n = demo.touches.length;
    _results = [];
    while (i < n) {
      touch = demo.touches[i];
      max = random(1, 4);
      j = 0;
      while (j < max) {
        demo.spawn(touch.x, touch.y);
        j++;
      }
      _results.push(i++);
    }
    return _results;
  };

  setInterval((function() {
    var i, x, y, _results;

    i = 0;
    _results = [];
    while (i < 20) {
      x = (demo.width * 0.5) + random(-20, 20);
      y = (demo.height * 0.5) + random(-20, 20);
      demo.spawn(x, y);
      _results.push(i++);
    }
    return _results;
  }), 100);

}).call(this);
